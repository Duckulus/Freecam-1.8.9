buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.github.gatooooooo:ForgeGradle:FG_2.1-SNAPSHOT'
        classpath 'com.github.xcfrg:mixingradle:ae2a80e'
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
    }
}
plugins { id "java" }

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

group = "de.amin"
archivesBaseName = "Freecam"

repositories {
    mavenCentral()

    gradlePluginPortal()
    maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
    maven { url = "https://jitpack.io/" }
    maven { url = "https://maven.minecraftforge.net/" }
}

dependencies {
    implementation 'org.spongepowered:mixin:0.7.11-SNAPSHOT'
    annotationProcessor "org.spongepowered:mixin:0.7.11-SNAPSHOT"
    provided files('lib/lm_api_mc1.8.9.jar')
}

mixin {
    disableRefMapWarning = true
    add sourceSets.main, refmap
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_20"
    makeObfSourceJar = false
    clientJvmArgs += ["-Dfml.coreMods.load=net.labymod.core.asm.LabyModCoreMod"]
}

jar {
    exclude("**/launch")
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    inputs.property 'name', mod_name
    inputs.property 'modid', mod_id
    inputs.property 'description', mod_description

    from(sourceSets.main.resources.srcDirs) {
        include('mcmod.info', 'addon.json')

        expand(
                'version': project.version,
                'mcversion': project.minecraft.version,
                'name': mod_name,
                'modid': mod_id,
                'description': mod_description
        )

    }

    from(sourceSets.main.resources.srcDirs) {
        exclude('mcmod.info', 'addon.json')
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

task moveResources {
    doLast {
        ant.move file: "${buildDir}/resources/main",
                todir: "${buildDir}/classes/java"
    }
}

tasks.moveResources.dependsOn processResources
tasks.classes.dependsOn moveResources

jar {
    manifest.attributes(
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "MixinConfigs": "mixins.freecam.json",
            "FMLCorePluginContainsFMLMod": true,
            "ForceLoadAsMod": true
    )
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
    }
    jar {
        useNotchSrg()
    }
}

reobfJar.dependsOn tasks.shadowJar
